name: CI/CD Pipeline

on:
  push:
    branches: [ 'master', 'development' ]
  pull_request:
    branches: [ 'master', 'development' ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test container
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: visa_doctors:test
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: docker run --rm visa_doctors:test python manage.py test


  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development')
    runs-on: self-hosted
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Exit on error
            
            # Function to retry commands
            function retry {
              local retries=3
              local count=0
              until "$@"; do
                exit=$?
                count=$(($count + 1))
                if [ $count -lt $retries ]; then
                  echo "Command failed. Attempt $count/$retries. Retrying in 5 seconds..."
                  sleep 5
                else
                  echo "Command failed after $retries attempts."
                  return $exit
                fi
              done
              return 0
            }
            
            echo "DEPLOY STARTED"
            cd ${{ secrets.APP_DIRECTORY }}
            
            # Pull latest changes with retry
            echo "Pulling latest changes..."
            retry git pull origin ${GITHUB_REF#refs/heads/}
            
            # Build and start containers
            echo "Building and starting containers..."
            retry docker compose build --no-cache
            retry docker compose up -d
            
            # Run migrations
            echo "Running migrations..."
            retry docker compose exec -T web python manage.py migrate --noinput
            
            # Collect static files
            echo "Collecting static files..."
            retry docker compose exec -T web python manage.py collectstatic --noinput
            
            echo "DEPLOY FINISHED"
