# Generated by Django 5.0.2 on 2025-05-11 17:24

from django.db import migrations


def create_statuses(apps, schema_editor):
    """Create default statuses and update existing submissions."""
    SubmissionStatus = apps.get_model('app', 'SubmissionStatus')
    SurveySubmission = apps.get_model('app', 'SurveySubmission')
    
    # u0421u043eu0437u0434u0430u0435u043c u0441u0442u0430u0442u0443u0441u044b u043du0430 u043eu0441u043du043eu0432u0435 u0441u0443u0449u0435u0441u0442u0432u0443u044eu0449u0438u0445
    statuses = {
        'new': SubmissionStatus.objects.create(
            name='New', 
            code='new', 
            description='New submissions that have not been processed yet',
            color='#28a745', 
            order=1, 
            is_default=True, 
            is_final=False, 
            active=True
        ),
        'in_progress': SubmissionStatus.objects.create(
            name='In Progress', 
            code='in_progress', 
            description='Submissions that are currently being processed',
            color='#ffc107', 
            order=2, 
            is_default=False, 
            is_final=False, 
            active=True
        ),
        'completed': SubmissionStatus.objects.create(
            name='Completed', 
            code='completed', 
            description='Successfully completed submissions',
            color='#17a2b8', 
            order=3, 
            is_default=False, 
            is_final=True, 
            active=True
        ),
        'rejected': SubmissionStatus.objects.create(
            name='Rejected', 
            code='rejected', 
            description='Submissions that have been rejected',
            color='#dc3545', 
            order=4, 
            is_default=False, 
            is_final=True, 
            active=True
        )
    }
    
    # # u041eu0431u043du043eu0432u043bu044fu0435u043c u0441u0443u0449u0435u0441u0442u0432u0443u044eu0449u0438u0435 u0437u0430u044fu0432u043au0438
    # for submission in SurveySubmission.objects.all():
    #     status_code = submission.status
    #     if status_code in statuses:
    #         submission.status = statuses[status_code]
    #         submission.save(update_fields=['status'])


def reverse_statuses(apps, schema_editor):
    """Remove all created statuses when migration is reversed."""
    SubmissionStatus = apps.get_model('app', 'SubmissionStatus')
    SurveySubmission = apps.get_model('app', 'SurveySubmission')
    
    # u0421u0431u0440u0430u0441u044bu0432u0430u0435u043c u0441u0441u044bu043bu043au0438 u043du0430 u0441u0442u0430u0442u0443u0441u044b
    SurveySubmission.objects.all().update(status=None)
    
    # u0423u0434u0430u043bu044fu0435u043c u0432u0441u0435 u0441u0442u0430u0442u0443u0441u044b
    SubmissionStatus.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0033_submissionstatus_surveysubmission_status_new"),
    ]

    operations = [
        migrations.RunPython(
            create_statuses,
            reverse_statuses,
        ),
    ]
